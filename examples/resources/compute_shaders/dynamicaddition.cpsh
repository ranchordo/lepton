#version 430 core

precision highp float;

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba16f, binding = 0, location = 0) uniform image2D img_output;

uniform vec3 invocation_dimensions=vec3(0);

void main() {
	ivec2 pixel_coords=ivec2(gl_GlobalInvocationID.xy);
	vec4 currentColor=imageLoad(img_output, pixel_coords);
	vec2 fractionalCoordinates=gl_GlobalInvocationID.xy/invocation_dimensions.xy;
	float r=sqrt(pow(fractionalCoordinates.x,2)+pow(fractionalCoordinates.y,2));
	imageStore(img_output, pixel_coords, vec4(currentColor.xyz+r*vec3(0.01,0.007,0.013),1));
}