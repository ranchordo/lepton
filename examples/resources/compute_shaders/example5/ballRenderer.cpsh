#version 430 core

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba16f, binding = 0, location = 0) uniform image2D img_output;

uniform vec3 invocation_dimensions=vec3(0);
uniform vec2 image_size=vec2(0);

layout (std140) buffer balls_buffer {
	vec4 balls[];
};

void main() {
	ivec3 coords=ivec3(gl_GlobalInvocationID.xyz);
	ivec2 pixel_coords=ivec2(balls[coords.x].xy);
	float m=1;
	bool needsXReversed=((balls[coords.x].x>=image_size.x) || (balls[coords.x].x<=0));
	bool needsYReversed=((balls[coords.x].y>=image_size.y) || (balls[coords.x].y<=0));
	balls[coords.x]=vec4(balls[coords.x].xy,int(needsXReversed)*(-balls[coords.x].z)+int(!needsXReversed)*(balls[coords.x].z),int(needsYReversed)*(-balls[coords.x].w)+int(!needsYReversed)*(balls[coords.x].w));
	balls[coords.x]=vec4(balls[coords.x].x+m*balls[coords.x].z,balls[coords.x].y+m*balls[coords.x].w,balls[coords.x].z,balls[coords.x].w);
	imageStore(img_output, pixel_coords, vec4(0,1,1,1));
}