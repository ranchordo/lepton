#version 430 core

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba16f, binding = 0, location = 0) uniform image2D img_output;

uniform vec3 invocation_dimensions=vec3(0);
uniform vec2 image_size=vec2(0);

layout (std140) buffer balls_buffer {
	vec4 balls[];
};

void main() {
	ivec3 coords=ivec3(gl_GlobalInvocationID.xyz);
	float m=0.01;
	vec4 sum=vec4(0);
	sum+=m*imageLoad(img_output, coords.xy+ivec2(-1,1));
	sum+=m*imageLoad(img_output, coords.xy+ivec2(0,1));
	sum+=m*imageLoad(img_output, coords.xy+ivec2(1,1));
	
	sum+=m*imageLoad(img_output, coords.xy+ivec2(-1,0));
	sum+=imageLoad(img_output, coords.xy+ivec2(0,0));
	sum+=m*imageLoad(img_output, coords.xy+ivec2(1,0));
	
	sum+=m*imageLoad(img_output, coords.xy+ivec2(-1,-1));
	sum+=m*imageLoad(img_output, coords.xy+ivec2(0,-1));
	sum+=m*imageLoad(img_output, coords.xy+ivec2(1,-1));
	
	sum/=1.0+(8.0*m);
	
	sum*=0.993;
	sum-=0.0001;
	sum=max(sum,0);
	
	imageStore(img_output, coords.xy, sum);
}