#version 430 core

#define PI 3.14159265358979

layout(local_size_x = 1, local_size_y = 1) in;

layout (std140) buffer balls_buffer {
	vec4 balls[];
};

uniform vec3 invocation_dimensions=vec3(0);
uniform vec2 image_size=vec2(0);

float rand(float fli) {
	uint i=uint(fli);//*4294967295.0);
	i^=2747636419u;
	i*=2654435769u;
	i^=i>>16;
	i*=2654435769u;
	i^=i>>16;
	i*=2654435769u;
	return fract(float(i)/4294967295.0);
}

void main() {
	ivec3 coords=ivec3(gl_GlobalInvocationID.xyz);
	float m=2.7;
	//**(rand(coords.x*3.3405))
	vec2 pos=image_size.y*0.25*normalize(vec2(rand(coords.x)*2.0-1.0,rand(pow(coords.x,2.0))*2.0-1.0));
	balls[coords.x]=vec4(image_size*0.5+pos,2.0*PI*rand(pow(coords.x,3)),m);
	float ang=atan(balls[coords.x].x-(image_size.x*0.5),balls[coords.x].y-(image_size.y*0.5));
	balls[coords.x]=vec4(balls[coords.x].xy,-ang-(PI*0.5),balls[coords.x].w);
	//balls[coords.x]=vec4(vec2(rand(coords.x),rand(coords.x*2))*image_size,rand(coords.x*3),m);
}